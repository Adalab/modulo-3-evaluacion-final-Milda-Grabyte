{"version":3,"sources":["services/api.js","components/CharacterCard.js","components/CharacterList.js","images/ImageList.js","components/Filters.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["fetch","then","response","json","data","catch","console","log","CharacterCard","props","className","to","id","src","imageUrl","alt","name","species","gender","status","CharacterList","listItems","alert","wrongText","length","characters","sort","rick","morty","map","character","image","Filters","onSubmit","ev","preventDefault","htmlFor","type","onChange","handleSearchText","target","value","storedValue","CharacterDetail","origin","episodes","App","useState","setCharacters","searchText","setSearchText","localStorage","getItem","useEffect","api","results","setItem","searchedCharacters","filter","toLowerCase","includes","exact","path","render","detailId","parseInt","match","params","detail","find","episode","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc8c716e.chunk.js","sourcesContent":["const getDataFromApi = () => {\n  return fetch('https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json')\n    .then((response) => response.json())\n    .then((data) => {\n      return data;\n    })\n    .catch(() => console.log('Error. Canâ€™t access fetch response.'));\n};\n\nexport default { getDataFromApi };","import { Link } from 'react-router-dom';\nfunction CharacterCard(props) {\n  return (\n    <article className='char--container'>\n      <Link to={`/character/${props.id}`}>\n        <div className='char__image--container'>\n          <img className='char__image' src={props.imageUrl} alt={props.name}></img>\n        </div>\n        <h2 className='char__name'>{props.name}</h2>\n        <p className='char__species'>{props.species}</p>\n        <p className='char__gender'>{props.gender}</p>\n        <p className='char__life-status'>{props.status}</p>\n      </Link>\n    </article>\n  );\n}\n\nexport default CharacterCard;\n","import CharacterCard from './CharacterCard'\nimport { facepalm } from '../images/ImageList'\nimport '../styles/CharacterList.scss'\nfunction CharacterList(props) {\n\n  const listItems = props.alert ? (\n    props.wrongText.length >= 5 ? (\n      <img src={facepalm} alt='Rick facepalming really hard'></img>\n    ) : (\n      <p className='alert'>What kind of a lame-ass would type \"{props.wrongText}\"?!</p>\n    )\n  ) : (\n    props.characters\n      .sort((rick, morty) => (rick.name > morty.name ? 1 : rick.name === morty.name ? (rick.id > morty.id ? 1 : -1) : -1))\n        .map((character) => {\n          // let species;\n          // let status;\n          // if (character.species === \"Human\" && character.gender === \"Male\") {\n          //   species = ;\n          // }\n        return (\n          <li className='character__item' key={`character${character.id}`}>\n            <CharacterCard\n              imageUrl={character.image}\n              name={character.name}\n              species={character.species}\n              gender={character.gender}\n              status={character.status}\n              id={character.id}\n            />\n          </li>\n        );\n      })\n  );\n  return (\n    <ul className='character__list'>\n      {listItems}\n    </ul>\n  );\n}\n\nexport default CharacterList;\n","export const logo = 'https://help.redbubble.com/hc/article_attachments/360002309526/Rick_and_Morty_-_logo__English_.png';\n\nexport const facepalm = 'https://i.pinimg.com/originals/e4/48/63/e44863ebec8dd76213734a95fe6094f1.gif';\n\nexport const notFound = 'https://cdn.dribbble.com/users/2795539/screenshots/5588688/im_sorry_but_your_opinion.png';\n\nexport const dead = 'https://icon-library.com/images/death-icon-png/death-icon-png-21.jpg'\n\nexport const alive = 'https://cdn1.iconfinder.com/data/icons/gamezzz/32/heart-512.png'","import React from 'react';\n\nconst Filters = (props) => {\n  \n  const handleFilter = (ev) => {\n    props.handleSearchText(ev.target.value);\n  };\n\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n  }\n\n  return (\n    <form className='search-input' onSubmit={handleSubmit}>\n      <label className='form__label' htmlFor='name'></label>\n      <input className='form__input--text' type='text' id='name' onChange={handleFilter} value={props.storedValue} />\n    </form>\n  );\n};\n\nexport default Filters;\n","import { Link } from 'react-router-dom';\nfunction CharacterDetail(props) {\n  return (\n    <>\n      <button type='button'>\n        <Link to='/'>Go back</Link>\n      </button>\n      <article className='char--container'>\n        <div className='char__image--container'>\n          <img className='char__image' src={props.imageUrl} alt={props.name}></img>\n        </div>\n        <h2 className='char__name'>{props.name}</h2>\n        <p className='char__species'>{props.species}</p>\n        <p className='char__gender'>{props.gender}</p>\n        <p className='char__life-status'>{props.status}</p>\n        <p className='char__origin'>{props.origin}</p>\n        <p className='char__episode-count'>{props.episodes}</p>\n      </article>\n    </>\n  );\n}\n\nexport default CharacterDetail;\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport '../styles/App.scss';\nimport api from '../services/api';\nimport CharacterList from './CharacterList';\nimport Filters from './Filters';\nimport CharacterDetail from './CharacterDetail'\nimport { logo } from '../images/ImageList';\nimport { notFound } from '../images/ImageList';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const storedValue = localStorage.getItem('Reduce, Reuse, Re-Morty') || '';\n  \n   useEffect(() => {\n     api.getDataFromApi().then((data) => {\n       setCharacters(data.results);\n     });\n   }, []);\n    \n  const handleSearchText = searchText => {\n    setSearchText(searchText);\n    localStorage.setItem('Reduce, Reuse, Re-Morty', searchText);\n  };\n\n  const searchedCharacters = characters.filter(character => {\n    return character.name.toLowerCase().includes(searchText.toLowerCase());\n  });\n\n  const renderCharacterDetail = (props) => {\n    const detailId = parseInt(props.match.params.id);\n    const detail = characters.find((character) => character.id === detailId);\n    if (detail) {\n      return (\n        <CharacterDetail\n          imageUrl={detail.image}\n          name={detail.name}\n          species={detail.species}\n          gender={detail.gender}\n          status={detail.status}\n          origin={detail.origin.name}\n          episodes={detail.episode.length}\n          id={detail.id}\n        />\n      );\n    } else {\n      return <img className='image--not-found' alt='You failed' src={notFound}/>;\n    }\n  };\n   return (\n     <>\n       <div className='main-container'>\n         <main>\n           <Switch>\n             <Route\n               exact\n               path='/'\n               render={() => (\n                 <>\n                   <header>\n                     <img src={logo} alt='Rick and Morty logo'></img>\n                     <Filters storedValue={storedValue} handleSearchText={handleSearchText} />\n                   </header>\n                   <CharacterList\n                     alert={searchedCharacters.length === 0}\n                     wrongText={searchText}\n                     characters={searchText === '' ? characters : searchedCharacters}\n                   />\n                 </>\n               )}\n             />\n             <Route path='/character/:id' render={renderCharacterDetail}/>\n           </Switch>\n         </main>\n       </div>\n     </>\n   );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}